name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  test:
    name: Test
    runs-on: [self-hosted, nv-prometheus]
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - 1.75.0  # MSRV
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run tests
      run: cargo test --verbose

    - name: Run tests with no default features
      run: cargo test --no-default-features --verbose

  lint:
    name: Lint
    runs-on: [self-hosted, nv-prometheus]
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

  security:
    name: Security Audit
    runs-on: [self-hosted, nv-prometheus]
    steps:
    - uses: actions/checkout@v4

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit

  build:
    name: Build
    runs-on: [self-hosted, nv-prometheus]
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          # Add more targets as needed for your self-hosted environment
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }} --verbose

  coverage:
    name: Coverage
    runs-on: [self-hosted, nv-prometheus]
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Generate code coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: cobertura.xml
        fail_ci_if_error: true

  nvidia_integration:
    name: NVIDIA GPU Integration Tests
    runs-on: [self-hosted, nv-prometheus]
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build nvbind
      run: cargo build --release

    - name: Test GPU detection
      run: |
        echo "=== Testing GPU Discovery ==="
        ./target/release/nvbind info

    - name: Test configuration
      run: |
        echo "=== Testing Configuration ==="
        ./target/release/nvbind config --show

    - name: Test Docker integration (if available)
      run: |
        echo "=== Testing Docker Integration ==="
        if command -v docker &> /dev/null; then
          echo "Docker found - testing GPU passthrough"
          ./target/release/nvbind run --runtime docker ubuntu:22.04 ls /dev/nvidia* || true
        else
          echo "Docker not available - skipping Docker tests"
        fi

    - name: Test driver type detection
      run: |
        echo "=== Testing Enhanced Driver Detection ==="
        ./target/release/nvbind info | grep -E "(Driver Type|NVIDIA)"

    - name: Verify all device files accessible
      run: |
        echo "=== Verifying Device Access ==="
        ls -la /dev/nvidia* || true
        ls -la /dev/dri* || true